{"remainingRequest":"/home/vdsancheza/Documents/MeanStack/some-grid/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/home/vdsancheza/Documents/MeanStack/some-grid/node_modules/ag-grid-enterprise/dist/lib/sideBar/sideBarComp.js","dependencies":[{"path":"/home/vdsancheza/Documents/MeanStack/some-grid/node_modules/ag-grid-enterprise/dist/lib/sideBar/sideBarComp.js","mtime":499162500000},{"path":"/home/vdsancheza/Documents/MeanStack/some-grid/node_modules/cache-loader/dist/cjs.js","mtime":1538485928640},{"path":"/home/vdsancheza/Documents/MeanStack/some-grid/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["// ag-grid-enterprise v19.0.0\n\"use strict\";\nvar __extends = /*@__PURE__*/ require(\"tslib\").__extends;\nvar __decorate = /*@__PURE__*/ require(\"tslib\").__decorate;\nvar __metadata = /*@__PURE__*/ require(\"tslib\").__metadata;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ag_grid_community_1 = require(\"ag-grid-community\");\nvar sideBarButtonsComp_1 = require(\"./sideBarButtonsComp\");\nvar toolPanelWrapper_1 = require(\"./toolPanelWrapper\");\nvar SideBarComp = /*@__PURE__*/ (function (_super) {\n    __extends(SideBarComp, _super);\n    function SideBarComp() {\n        var _this = _super.call(this, SideBarComp.TEMPLATE) || this;\n        _this.panelComps = {};\n        return _this;\n    }\n    // this was deprecated in v19, we can drop in v20\n    SideBarComp.prototype.getPreferredWidth = function () {\n        return this.getGui().clientWidth;\n    };\n    SideBarComp.prototype.registerGridComp = function (gridPanel) {\n        this.sideBarButtonsComp.registerGridComp(gridPanel);\n    };\n    SideBarComp.prototype.postConstruct = function () {\n        var _this = this;\n        this.instantiate(this.context);\n        var sideBar = this.gridOptionsWrapper.getSideBar();\n        if (sideBar == null) {\n            this.getGui().removeChild(this.sideBarButtonsComp.getGui());\n            return;\n        }\n        var allPromises = [];\n        if (sideBar.toolPanels) {\n            sideBar.toolPanels.forEach(function (toolPanel) {\n                if (toolPanel.id == null) {\n                    console.warn(\"ag-grid: please review all your toolPanel components, it seems like at least one of them doesn't have an id\");\n                    return;\n                }\n                var componentPromise = _this.componentResolver.createAgGridComponent(toolPanel, toolPanel.toolPanelParams, 'toolPanel', null);\n                if (componentPromise == null) {\n                    console.warn(\"ag-grid: error processing tool panel component \" + toolPanel.id + \". You need to specify either 'toolPanel' or 'toolPanelFramework'\");\n                    return;\n                }\n                allPromises.push(componentPromise);\n                componentPromise.then(function (component) {\n                    var wrapper = _this.componentResolver.createInternalAgGridComponent(toolPanelWrapper_1.ToolPanelWrapper, {\n                        innerComp: component\n                    });\n                    _this.panelComps[toolPanel.id] = wrapper;\n                });\n            });\n        }\n        ag_grid_community_1.Promise.all(allPromises).then(function (done) {\n            Object.keys(_this.panelComps).forEach(function (key) {\n                var currentComp = _this.panelComps[key];\n                _this.getGui().appendChild(currentComp.getGui());\n                _this.sideBarButtonsComp.registerPanelComp(key, currentComp);\n                currentComp.setVisible(false);\n            });\n            if (ag_grid_community_1._.exists(_this.sideBarButtonsComp.defaultPanelKey)) {\n                _this.sideBarButtonsComp.setPanelVisibility(_this.sideBarButtonsComp.defaultPanelKey, true);\n            }\n        });\n    };\n    SideBarComp.prototype.refresh = function () {\n        var _this = this;\n        Object.keys(this.panelComps).forEach(function (key) {\n            var currentComp = _this.panelComps[key];\n            currentComp.refresh();\n        });\n    };\n    SideBarComp.prototype.setVisible = function (show) {\n        if (ag_grid_community_1._.get(this.gridOptionsWrapper.getSideBar(), 'toolPanels', []).length === 0)\n            return;\n        _super.prototype.setVisible.call(this, show);\n        if (show) {\n            var keyOfTabToShow = this.getActiveToolPanelItem();\n            keyOfTabToShow = keyOfTabToShow ? keyOfTabToShow : ag_grid_community_1._.get(this.gridOptionsWrapper.getSideBar(), 'defaultToolPanel', null);\n            keyOfTabToShow = keyOfTabToShow ? keyOfTabToShow : this.gridOptionsWrapper.getSideBar().defaultToolPanel;\n            var tabToShow = this.panelComps[keyOfTabToShow];\n            if (!tabToShow) {\n                console.warn(\"ag-grid: can't set the visibility of the tool panel item [\" + keyOfTabToShow + \"] since it can't be found\");\n                return;\n            }\n            tabToShow.setVisible(true);\n        }\n    };\n    SideBarComp.prototype.openToolPanel = function (key) {\n        var currentlyOpenedKey = this.getActiveToolPanelItem();\n        if (currentlyOpenedKey === key)\n            return;\n        var tabToShow = this.panelComps[key];\n        if (!tabToShow) {\n            console.warn(\"ag-grid: invalid tab key [\" + key + \"] to open for the tool panel\");\n            return;\n        }\n        if (currentlyOpenedKey != null) {\n            this.sideBarButtonsComp.setPanelVisibility(currentlyOpenedKey, false);\n        }\n        this.sideBarButtonsComp.setPanelVisibility(key, true);\n    };\n    SideBarComp.prototype.close = function () {\n        var currentlyOpenedKey = this.getActiveToolPanelItem();\n        if (!currentlyOpenedKey)\n            return;\n        this.sideBarButtonsComp.setPanelVisibility(currentlyOpenedKey, false);\n    };\n    SideBarComp.prototype.isToolPanelShowing = function () {\n        return this.getActiveToolPanelItem() != null;\n    };\n    SideBarComp.prototype.getActiveToolPanelItem = function () {\n        var _this = this;\n        var activeToolPanel = null;\n        Object.keys(this.panelComps).forEach(function (key) {\n            var currentComp = _this.panelComps[key];\n            if (currentComp.isVisible()) {\n                activeToolPanel = key;\n            }\n        });\n        return activeToolPanel;\n    };\n    SideBarComp.prototype.openedItem = function () {\n        return this.getActiveToolPanelItem();\n    };\n    SideBarComp.prototype.reset = function () {\n        this.sideBarButtonsComp.clear();\n        this.panelComps = {};\n        this.setTemplate(SideBarComp.TEMPLATE);\n        this.postConstruct();\n    };\n    SideBarComp.TEMPLATE = \"<div class=\\\"ag-side-bar\\\">\\n              <ag-side-bar-buttons ref=\\\"sideBarButtons\\\">\\n          </div>\";\n    __decorate([\n        ag_grid_community_1.Autowired(\"context\"),\n        __metadata(\"design:type\", ag_grid_community_1.Context)\n    ], SideBarComp.prototype, \"context\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired(\"eventService\"),\n        __metadata(\"design:type\", ag_grid_community_1.EventService)\n    ], SideBarComp.prototype, \"eventService\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired(\"gridOptionsWrapper\"),\n        __metadata(\"design:type\", ag_grid_community_1.GridOptionsWrapper)\n    ], SideBarComp.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired(\"componentResolver\"),\n        __metadata(\"design:type\", ag_grid_community_1.ComponentResolver)\n    ], SideBarComp.prototype, \"componentResolver\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('sideBarButtons'),\n        __metadata(\"design:type\", sideBarButtonsComp_1.SideBarButtonsComp)\n    ], SideBarComp.prototype, \"sideBarButtonsComp\", void 0);\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], SideBarComp.prototype, \"postConstruct\", null);\n    return SideBarComp;\n}(ag_grid_community_1.Component));\nexports.SideBarComp = SideBarComp;\n",null]}