{"remainingRequest":"/home/vdsancheza/Documents/MeanStack/some-grid/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/home/vdsancheza/Documents/MeanStack/some-grid/node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/filters/filtersToolPanel.js","dependencies":[{"path":"/home/vdsancheza/Documents/MeanStack/some-grid/node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/filters/filtersToolPanel.js","mtime":499162500000},{"path":"/home/vdsancheza/Documents/MeanStack/some-grid/node_modules/cache-loader/dist/cjs.js","mtime":1538485928640},{"path":"/home/vdsancheza/Documents/MeanStack/some-grid/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["// ag-grid-enterprise v19.0.0\n\"use strict\";\nvar __extends = /*@__PURE__*/ require(\"tslib\").__extends;\nvar __decorate = /*@__PURE__*/ require(\"tslib\").__decorate;\nvar __metadata = /*@__PURE__*/ require(\"tslib\").__metadata;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ag_grid_community_1 = require(\"ag-grid-community\");\nvar toolPanelFilterComp_1 = require(\"./toolPanelFilterComp\");\nvar FiltersToolPanel = /*@__PURE__*/ (function (_super) {\n    __extends(FiltersToolPanel, _super);\n    function FiltersToolPanel() {\n        var _this = _super.call(this, FiltersToolPanel.TEMPLATE) || this;\n        _this.initialised = false;\n        return _this;\n    }\n    FiltersToolPanel.prototype.init = function () {\n        var _this = this;\n        this.instantiate(this.context);\n        this.initialised = true;\n        this.eventService.addEventListener('newColumnsLoaded', function () { return _this.onColumnsChanged(); });\n        if (this.columnController.isReady()) {\n            this.onColumnsChanged();\n        }\n    };\n    FiltersToolPanel.prototype.onColumnsChanged = function () {\n        this.getGui().innerHTML = '';\n        this.columnTree = this.columnController.getPrimaryColumnTree();\n        var groupsExist = this.columnController.isPrimaryColumnGroupsPresent();\n        this.recursivelyAddComps(this.columnTree, 0, groupsExist);\n        this.setTemplateFromElement(this.getGui());\n    };\n    FiltersToolPanel.prototype.refresh = function () {\n    };\n    // lazy initialise the panel\n    FiltersToolPanel.prototype.setVisible = function (visible) {\n        _super.prototype.setVisible.call(this, visible);\n        if (visible && !this.initialised) {\n            this.init();\n        }\n    };\n    FiltersToolPanel.prototype.recursivelyAddComps = function (tree, dept, groupsExist) {\n        var _this = this;\n        tree.forEach(function (child) {\n            if (child instanceof ag_grid_community_1.OriginalColumnGroup) {\n                _this.recursivelyAddComps(child.getChildren(), dept, groupsExist);\n            }\n            else {\n                _this.recursivelyAddColumnComps(child);\n            }\n        });\n    };\n    FiltersToolPanel.prototype.recursivelyAddColumnComps = function (column) {\n        if (column.getColDef() && column.getColDef().suppressFilter) {\n            return;\n        }\n        var renderedFilter = this.componentResolver.createInternalAgGridComponent(toolPanelFilterComp_1.ToolPanelFilterComp, {\n            column: column\n        });\n        this.context.wireBean(renderedFilter);\n        this.getGui().appendChild(renderedFilter.getGui());\n    };\n    FiltersToolPanel.TEMPLATE = \"<div class=\\\"ag-filter-panel\\\" ref=\\\"ePanelContainer\\\" />\";\n    __decorate([\n        ag_grid_community_1.Autowired('columnApi'),\n        __metadata(\"design:type\", ag_grid_community_1.ColumnApi)\n    ], FiltersToolPanel.prototype, \"columnApi\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired(\"context\"),\n        __metadata(\"design:type\", ag_grid_community_1.Context)\n    ], FiltersToolPanel.prototype, \"context\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired(\"gridOptionsWrapper\"),\n        __metadata(\"design:type\", ag_grid_community_1.GridOptionsWrapper)\n    ], FiltersToolPanel.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired(\"gridApi\"),\n        __metadata(\"design:type\", ag_grid_community_1.GridApi)\n    ], FiltersToolPanel.prototype, \"gridApi\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired(\"eventService\"),\n        __metadata(\"design:type\", ag_grid_community_1.EventService)\n    ], FiltersToolPanel.prototype, \"eventService\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('columnController'),\n        __metadata(\"design:type\", ag_grid_community_1.ColumnController)\n    ], FiltersToolPanel.prototype, \"columnController\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('rowModel'),\n        __metadata(\"design:type\", Object)\n    ], FiltersToolPanel.prototype, \"rowModel\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('componentResolver'),\n        __metadata(\"design:type\", ag_grid_community_1.ComponentResolver)\n    ], FiltersToolPanel.prototype, \"componentResolver\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('valueService'),\n        __metadata(\"design:type\", ag_grid_community_1.ValueService)\n    ], FiltersToolPanel.prototype, \"valueService\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('$scope'),\n        __metadata(\"design:type\", Object)\n    ], FiltersToolPanel.prototype, \"$scope\", void 0);\n    return FiltersToolPanel;\n}(ag_grid_community_1.Component));\nexports.FiltersToolPanel = FiltersToolPanel;\n",null]}