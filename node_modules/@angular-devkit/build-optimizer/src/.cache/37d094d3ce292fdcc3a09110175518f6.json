{"remainingRequest":"/home/vdsancheza/Documents/MeanStack/some-grid/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/home/vdsancheza/Documents/MeanStack/some-grid/node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/gridHeaderDropZones.js","dependencies":[{"path":"/home/vdsancheza/Documents/MeanStack/some-grid/node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/gridHeaderDropZones.js","mtime":499162500000},{"path":"/home/vdsancheza/Documents/MeanStack/some-grid/node_modules/cache-loader/dist/cjs.js","mtime":1538485928640},{"path":"/home/vdsancheza/Documents/MeanStack/some-grid/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["// ag-grid-enterprise v19.0.0\n\"use strict\";\nvar __extends = /*@__PURE__*/ require(\"tslib\").__extends;\nvar __decorate = /*@__PURE__*/ require(\"tslib\").__decorate;\nvar __metadata = /*@__PURE__*/ require(\"tslib\").__metadata;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar main_1 = require(\"ag-grid-community/main\");\nvar GridHeaderDropZones = /*@__PURE__*/ (function (_super) {\n    __extends(GridHeaderDropZones, _super);\n    function GridHeaderDropZones() {\n        return _super.call(this) || this;\n    }\n    GridHeaderDropZones.prototype.postConstruct = function () {\n        this.setGui(this.createNorthPanel());\n        this.eventService.addEventListener(main_1.Events.EVENT_COLUMN_ROW_GROUP_CHANGED, this.onRowGroupChanged.bind(this));\n        this.eventService.addEventListener(main_1.Events.EVENT_COLUMN_EVERYTHING_CHANGED, this.onRowGroupChanged.bind(this));\n        this.onRowGroupChanged();\n    };\n    GridHeaderDropZones.prototype.createNorthPanel = function () {\n        var _this = this;\n        var topPanelGui = document.createElement('div');\n        var dropPanelVisibleListener = this.onDropPanelVisible.bind(this);\n        this.rowGroupComp = this.rowGroupCompFactory.create();\n        this.pivotComp = this.pivotCompFactory.create();\n        topPanelGui.appendChild(this.rowGroupComp.getGui());\n        topPanelGui.appendChild(this.pivotComp.getGui());\n        this.rowGroupComp.addEventListener(main_1.Component.EVENT_VISIBLE_CHANGED, dropPanelVisibleListener);\n        this.pivotComp.addEventListener(main_1.Component.EVENT_VISIBLE_CHANGED, dropPanelVisibleListener);\n        this.addDestroyFunc(function () {\n            _this.rowGroupComp.removeEventListener(main_1.Component.EVENT_VISIBLE_CHANGED, dropPanelVisibleListener);\n            _this.pivotComp.removeEventListener(main_1.Component.EVENT_VISIBLE_CHANGED, dropPanelVisibleListener);\n        });\n        this.onDropPanelVisible();\n        return topPanelGui;\n    };\n    GridHeaderDropZones.prototype.onDropPanelVisible = function () {\n        var bothVisible = this.rowGroupComp.isVisible() && this.pivotComp.isVisible();\n        this.rowGroupComp.addOrRemoveCssClass('ag-width-half', bothVisible);\n        this.pivotComp.addOrRemoveCssClass('ag-width-half', bothVisible);\n    };\n    GridHeaderDropZones.prototype.onRowGroupChanged = function () {\n        if (!this.rowGroupComp) {\n            return;\n        }\n        var rowGroupPanelShow = this.gridOptionsWrapper.getRowGroupPanelShow();\n        if (rowGroupPanelShow === main_1.Constants.ALWAYS) {\n            this.rowGroupComp.setVisible(true);\n        }\n        else if (rowGroupPanelShow === main_1.Constants.ONLY_WHEN_GROUPING) {\n            var grouping = !this.columnController.isRowGroupEmpty();\n            this.rowGroupComp.setVisible(grouping);\n        }\n        else {\n            this.rowGroupComp.setVisible(false);\n        }\n    };\n    __decorate([\n        main_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", main_1.GridOptionsWrapper)\n    ], GridHeaderDropZones.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        main_1.Autowired('columnController'),\n        __metadata(\"design:type\", main_1.ColumnController)\n    ], GridHeaderDropZones.prototype, \"columnController\", void 0);\n    __decorate([\n        main_1.Autowired('eventService'),\n        __metadata(\"design:type\", main_1.EventService)\n    ], GridHeaderDropZones.prototype, \"eventService\", void 0);\n    __decorate([\n        main_1.Optional('rowGroupCompFactory'),\n        __metadata(\"design:type\", Object)\n    ], GridHeaderDropZones.prototype, \"rowGroupCompFactory\", void 0);\n    __decorate([\n        main_1.Optional('pivotCompFactory'),\n        __metadata(\"design:type\", Object)\n    ], GridHeaderDropZones.prototype, \"pivotCompFactory\", void 0);\n    __decorate([\n        main_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], GridHeaderDropZones.prototype, \"postConstruct\", null);\n    return GridHeaderDropZones;\n}(main_1.Component));\nexports.GridHeaderDropZones = GridHeaderDropZones;\n",null]}