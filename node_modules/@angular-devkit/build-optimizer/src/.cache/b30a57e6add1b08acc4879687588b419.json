{"remainingRequest":"/home/vdsancheza/Documents/MeanStack/some-grid/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/home/vdsancheza/Documents/MeanStack/some-grid/node_modules/ag-grid-enterprise/dist/lib/statusBar/providedPanels/selectedRowsComp.js","dependencies":[{"path":"/home/vdsancheza/Documents/MeanStack/some-grid/node_modules/ag-grid-enterprise/dist/lib/statusBar/providedPanels/selectedRowsComp.js","mtime":499162500000},{"path":"/home/vdsancheza/Documents/MeanStack/some-grid/node_modules/cache-loader/dist/cjs.js","mtime":1538485928640},{"path":"/home/vdsancheza/Documents/MeanStack/some-grid/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["// ag-grid-enterprise v19.0.0\n\"use strict\";\nvar __extends = /*@__PURE__*/ require(\"tslib\").__extends;\nvar __decorate = /*@__PURE__*/ require(\"tslib\").__decorate;\nvar __metadata = /*@__PURE__*/ require(\"tslib\").__metadata;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ag_grid_community_1 = require(\"ag-grid-community\");\nvar nameValueComp_1 = require(\"./nameValueComp\");\nvar SelectedRowsComp = /*@__PURE__*/ (function (_super) {\n    __extends(SelectedRowsComp, _super);\n    function SelectedRowsComp() {\n        return _super.call(this, 'selectedRowCount', 'Selected') || this;\n    }\n    SelectedRowsComp.prototype.postConstruct = function () {\n        _super.prototype.postConstruct.call(this);\n        if (!this.isValidRowModel()) {\n            console.warn(\"ag-Grid: agSelectedRowCountComponent should only be used with the client and server side row model.\");\n            return;\n        }\n        this.addCssClass('ag-status-panel');\n        this.addCssClass('ag-status-panel-selected-row-count');\n        var selectedRowCount = this.gridApi.getSelectedRows().length;\n        this.setValue(selectedRowCount);\n        this.setVisible(selectedRowCount > 0);\n        var eventListener = this.onRowSelectionChanged.bind(this);\n        this.eventService.addEventListener(ag_grid_community_1.Events.EVENT_MODEL_UPDATED, eventListener);\n        this.eventService.addEventListener(ag_grid_community_1.Events.EVENT_ROW_SELECTED, eventListener);\n    };\n    SelectedRowsComp.prototype.isValidRowModel = function () {\n        // this component is only really useful with client or server side rowmodels\n        var rowModelType = this.gridApi.getModel().getType();\n        return rowModelType === 'clientSide' || rowModelType !== 'serverSide';\n    };\n    SelectedRowsComp.prototype.onRowSelectionChanged = function () {\n        var selectedRowCount = this.gridApi.getSelectedRows().length;\n        this.setValue(selectedRowCount);\n        this.setVisible(selectedRowCount > 0);\n    };\n    SelectedRowsComp.prototype.init = function () {\n    };\n    __decorate([\n        ag_grid_community_1.Autowired('eventService'),\n        __metadata(\"design:type\", ag_grid_community_1.EventService)\n    ], SelectedRowsComp.prototype, \"eventService\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('gridApi'),\n        __metadata(\"design:type\", ag_grid_community_1.GridApi)\n    ], SelectedRowsComp.prototype, \"gridApi\", void 0);\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], SelectedRowsComp.prototype, \"postConstruct\", null);\n    return SelectedRowsComp;\n}(nameValueComp_1.NameValueComp));\nexports.SelectedRowsComp = SelectedRowsComp;\n",null]}